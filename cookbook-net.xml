<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                         "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % sharedents SYSTEM "shared-entities.xml" >
%sharedents;
]>

<chapter id="cb-net">

  <title>Complex Network Configuration</title>

  <para>
    This chapter contains solutions for several non-trivial network
    configurations. The first section discusses the interoperation of
    &dcache; with firewalls and does not require any background
    knowledge about &dcache; other than what is given in the
    installation guide (<xref linkend="in"/>) and the first steps
    tutorial (<xref linkend="intouch"/>). The following sections will
    deal with more complex network topologies, e.g. private subnets.
    Even though not every case is covered, these cases might help
    solve other problems, as well. Intermediate knowledge about
    &dcache; is required.
  </para>

  <warning>
    <para>
      The TCP and UDP ports used for dCache internal communication
      (port <literal>11111</literal> by default)
      <emphasis>MUST</emphasis> be subject to firewall control so that
      only other dCache nodes can access them.  Failure to do this
      will allow an attacker to issue arbitrary commands on any node
      within your dCache cluster, as whichever user the dCache process
      runs.
    </para>
  </warning>

  <section id="cb-net-firewall">
    <title>Firewall Configuration</title>

    <para>
      The components of a &dcache; instance may be distributed over
      several hosts (nodes). Some of these components are accessed
      from outside and consequently the firewall needs to be aware of
      that. We contemplate two communication types, the &dcache;
      internal communication and the interaction from &dcache; with
      clients.
    </para>

    <para>
      Since &dcache; is very flexible, most port numbers may be
      changed in the configuration.  The command <command>dcache
      ports</command> will provide you with a list of services and the
      ports they are using.
    </para>

    <section>
      <title>Basic Installation</title>
     <para>
      This section assumes that all nodes are behind a firewall
      and have full access to each other.
     </para>

    <formalpara><title>&dcache; internal</title>
    <itemizedlist>
      <listitem>
	<para>
	  As we assume that all nodes are behind a firewall and have
	  full access to each other there is nothing to be mentioned
	  here.
	</para>
      </listitem>
      <listitem>
	<para>
	  On the pool nodes the LAN range ports need to be opened to
	  allow pool to pool communication. By default these are ports
	  <literal>33115-33145</literal> (set by the properties
	  <varname>dcache.net.lan.port.min</varname> and
	  <varname>dcache.net.lan.port.max</varname>).
	</para>
      </listitem>
    </itemizedlist>
    </formalpara>
    <formalpara><title>&dcache; communication with client</title>
    <itemizedlist>
      <listitem>
	<para>
	  The door ports need to be opened to allow the clients to
	  connect to the doors.
	</para>
      </listitem>
      <listitem>
	<para>
	  The WAN/LAN range ports need to be opened to allow the
	  clients to connect to the pools. The default values for the
	  WAN port range are <literal>20000-25000</literal>. The WAN
	  port range is defined by the properties
	  <varname>dcache.net.wan.port.min</varname> and
	  <varname>dcache.net.wan.port.max</varname>.
	</para>
      </listitem>
    </itemizedlist>

    </formalpara>
    </section>

    <section>
      <title>Multi-Node with Firewalls</title>
      <para>
	Multinode setup with firewalls on the nodes.
      </para>
	<formalpara><title>&dcache; internal</title>
	<itemizedlist>
	  <listitem>
	    <para>
	      The &cell-locationmngr; server runs in the
	      &domain-dcache;. By default it is listening on UDP port
	      <literal>11111</literal>. Hence, on the head node port
	      <literal>11111</literal> needs to be opened in the
	      firewall to allow connections to the
	      &cell-locationmngr;.  Remember to limit this so that
	      only other dCache nodes are allowed access.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      On the pool nodes the LAN range ports need to be opened
	      to allow pool to pool communication. By default these
	      are ports <literal>33115-33145</literal> (set by the
	      properties <varname>dcache.net.lan.port.min</varname> and
	      <varname>dcache.net.lan.port.max</varname>).
	    </para>
	  </listitem>
	</itemizedlist>
	</formalpara>
	<formalpara><title>&dcache; communication with client</title>
	<itemizedlist>
	  <listitem>
	    <para>
	      The door ports need to be opened to allow the clients to
	      connect to the doors.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The WAN/LAN range ports need to be opened to allow the
	      clients to connect to the pools. The default values for
	      the WAN port range are
	      <literal>20000-25000</literal>. The WAN port range is
	      defined by the properties
	      <varname>dcache.net.wan.port.min</varname> and
	      <varname>dcache.net.wan.port.max</varname>.
	    </para>
	  </listitem>
	</itemizedlist>
	</formalpara>

     <para>
       More complex setups are described in the following
       sections.
    </para>

    </section>

  </section>


  <section id="cb-net-second-if">
    <title>&gridftp; Connections via two or more Network Interfaces</title>
      
    <section role="NotInToc">
      <title>Description</title>
      <para>
	The host on which the &gridftp; door is running has several
	network interfaces and is supposed to accept client
	connections via all those interfaces. The interfaces might
	even belong to separate networks with no routing from one
	network to the other.
      </para>

      <para>
	As long as the data connection is opened by the &gridftp;
	server (passive FTP mode), there is no problem with having
	more than one interface. However, when the client opens the
	data connection (active FTP mode), the door (FTP server) has
	to supply it with the correct interface it should connect
	to. If this is the wrong interface, the client might not be
	able to connect to it, because there is no route or the
	connection might be inefficient.
      </para>

      <para>
        Also, since a &gridftp; server has to authenticate with an
        &x509; grid certificate and key, there needs to be a separate
        certificate and key pair for each name of the host or a
        certificate with alternative names. Since each network
        interface might have a different name, several certificates
        and keys are needed and the correct one has to be used, when
        authenticating via each of the interfaces.
      </para>
    </section>
      
    <section  role="NotInToc">
      <title>Solution</title>
      <para>
	Define two domains, one for the internal and one for the
	external use.  Start a separate &serv-srm;
	and &serv-gridftp; service in these domains.
      </para>
      
      <para>
	The &serv-srm; and the &serv-gridftp; service have to be
	configured with the property <varname>listen</varname>, only
	to listen on the interface they should serve. The locations of
	the grid host certificate and key files for the interface have
	to be specified explicitly with the properties
	<varname>dcache.authn.hostcert.cert</varname> and
	<varname>dcache.authn.hostcert.key</varname>.
      </para>
      

      <informalexample>
	<para>
	  In this example we show a setup for two &gridftp; doors
	  serving two network interfaces with the hostnames
	  <literal>door-internal</literal> (111.111.111.5) and
	  <literal>door-external</literal> (222.222.222.5) which are
	  served by two &gridftp; doors in two domains.
	</para>

	<programlisting>[internalDomain]
listen=111.111.111.5
dcache.authn.hostcert.cert=&path-ode-ed;/interface-cert-internal.pem
dcache.authn.hostcert.key=&path-ode-ed;/interface-key-internal.pem
[internalDomain/srm]
srm.cell.name=srm-internal
srm.protocols.loginbroker=loginbroker-internal
srm.net.host=door-internal
[internalDomain/ftp]
ftp.authn.protocol = gsi
ftp.cell.name=GFTP-door-internal
dcache.service.loginbroker=loginbroker-internal

[externalDomain]
listen=222.222.222.5
dcache.authn.hostcert.cert=&path-ode-ed;/interface-cert-external.pem
dcache.authn.hostcert.key=&path-ode-ed;/interface-key-external.pem
[externalDomain/srm]
srm.cell.name=srm-external
srm.protocols.loginbroker=loginbroker-external
srm.net.host=door-external
[externalDomain/ftp]
ftp.authn.protocol = gsi
ftp.cell.name=GFTP-door-external
dcache.service.loginbroker=loginbroker-external</programlisting>

      </informalexample>
      
      <para>
       
      </para>
    </section>
    
  </section> 
  
  <section id="cb-net-pool-priv">
    <title>&gridftp; with Pools in a Private Subnet</title>
    
    <section role="NotInToc">
      <title>Description</title>
      <para>
        If pool nodes of a dCache instance are connected to a
        secondary interface of the &gridftp; door, e.g. because they
        are in a private subnet, the &gridftp; door will still tell
        the pool to connect to its primary interface, which might be
        unreachable.
      </para>
      
      <para>
        The reason for this is that the control communication between
        the door and the pool is done via the network of &tcp;
        connections which have been established at start-up. In the
        standard setup this communication is routed via the &dcache;
        domain. However, for the data transfer, the pool connects to
        the &gridftp; door. The IP address it connects to is sent by
        the &gridftp; door to the pool via the control
        connection. Since the &gridftp; door cannot find out which of
        its interfaces the pool should use, it normally sends the IP
        address of the primary interface.
      </para>
    </section>
    
    <section role="NotInToc">
      <title>Solution</title>
      <para>
        Tell the &gridftp; door explicitly which IP it should send to
        the pool for the data connection with the
        <varname>ftp.net.internal</varname>
        property.
      </para>
      <informalexample>

	<para>
	  E.g. if the pools should connect to the secondary interface
	  of the &gridftp; door host which has the IP address
	  <literal>10.0.1.1</literal>, set
      </para>
      <programlisting>ftp.net.internal=10.0.1.1</programlisting>
      <para>
	in the <filename>&path-ode-ed;/dcache.conf</filename> file.
      </para>
      </informalexample>
     
    </section>
    
  </section>
  

</chapter>
